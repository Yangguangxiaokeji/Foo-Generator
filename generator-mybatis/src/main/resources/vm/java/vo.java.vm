package ${packageName}.${moduleName}.vo;


import ${packageName}.${moduleName}.domain.${ClassName}PO;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.beans.BeanUtils;
#foreach ($column in $columns)
#if($column.javaType =="Date")
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonFormat;
#end
#end


/**
 * ${functionName}(${ClassName})VOç±»
 *
 * @author ${author}
 * @date ${datetime}
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ${ClassName}VO {

    private $pkColumn.javaType $pkColumn.javaField;

#foreach ($column in $columns)
    #if($column.javaType == "Date")
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm:ss",timezone = "GMT+8")
    #end
    private $column.javaType $column.javaField;

#end
    public ${ClassName}PO convert2PO(){
        ${ClassName}PO ${className}PO = new ${ClassName}PO();
        BeanUtils.copyProperties(this, ${className}PO);
        return ${className}PO;
    }
}
